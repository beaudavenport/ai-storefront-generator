{"version":3,"sources":["webpack:///./src/templates/aboutUs.js"],"names":["AboutUsTemplate","pageContext","parentPage","data","text","split","firstParagraph","otherParagraphs","title","name","navHomePath","parentPath","render","isAnnotationsToggled","description","className","placement","isActive","fixed","image","childImageSharp","alt","context","imageAlt","map","paragraph"],"mappings":"2FAEA,iIAMe,SAASA,EAAT,GAAiD,IAAtBC,EAAqB,EAArBA,YAChCC,EADqD,EAARC,KAC7CD,WADqD,EAEhBD,EAAYG,KAAKC,MAAM,MAA7DC,EAFsD,KAEnCC,EAFmC,WAG7D,OACE,kBAAC,IAAD,CACEC,MAAOP,EAAYQ,KACnBC,YAAaT,EAAYU,WACzBC,OAAQ,gBAAGC,EAAH,EAAGA,qBAAH,OACN,oCACE,kBAAC,IAAD,CAAKL,MAAOP,EAAYQ,KAAMK,YAAab,EAAYO,QACvD,yBAAKO,UAAU,WACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,WACb,wBAAIA,UAAU,SAASd,EAAYO,OACnC,yBAAKO,UAAU,qCACb,kBAAC,IAAD,CAAYC,UAAU,SAASC,SAAUJ,GACvC,mJAOR,yBAAKE,UAAU,+EACb,yBAAKA,UAAU,SACb,kBAAC,IAAD,CACEG,MAAOhB,EAAWiB,MAAMC,gBAAgBF,MACxCG,IAAKnB,EAAWoB,QAAQC,WAE1B,yBAAKR,UAAU,qCACb,kBAAC,IAAD,CAAYC,UAAU,SAASC,SAAUJ,GACvC,gHAQV,yBAAKE,UAAU,WACb,uBAAGA,UAAU,SAAST,GACtB,yBAAKS,UAAU,qCACb,kBAAC,IAAD,CAAYC,UAAU,SAASC,SAAUJ,GACvC,mHAKHN,EAAgBiB,KAAI,SAACC,GAAD,OACnB,uBAAGV,UAAU,SACVU","file":"component---src-templates-about-us-js-3555afccc34f466e3cb7.js","sourcesContent":["import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Img from 'gatsby-image';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Annotation from '../components/annotation';\n\nexport default function AboutUsTemplate({ pageContext, data }) {\n  const { parentPage } = data;\n  const [firstParagraph, ...otherParagraphs] = pageContext.text.split('\\n');\n  return (\n    <Layout\n      title={pageContext.name}\n      navHomePath={pageContext.parentPath}\n      render={({ isAnnotationsToggled }) => (\n        <>\n          <SEO title={pageContext.name} description={pageContext.title} />\n          <div className=\"section\">\n            <div className=\"columns\">\n              <div className=\"column\">\n                <div className=\"section\">\n                  <h1 className=\"title\">{pageContext.title}</h1>\n                  <div className=\"is-flex is-justify-content-center\">\n                    <Annotation placement=\"bottom\" isActive={isAnnotationsToggled}>\n                      <strong>\n                        About Us title indicates the origins of the storefront in the first \"LOCATION\" entity from Google Analysis.\n                      </strong>\n                    </Annotation>\n                  </div>\n                </div>\n              </div>\n              <div className=\"column is-5-desktop is-flex is-align-items-center is-justify-content-center\">\n                <div className=\"image\">\n                  <Img\n                    fixed={parentPage.image.childImageSharp.fixed}\n                    alt={parentPage.context.imageAlt}\n                  />\n                  <div className=\"is-flex is-justify-content-center\">\n                    <Annotation placement=\"bottom\" isActive={isAnnotationsToggled}>\n                      <strong>\n                        About Us image is generated by Deep AI based on the above title prompt.\n                      </strong>\n                    </Annotation>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"section\">\n              <p className=\"block\">{firstParagraph}</p>\n              <div className=\"is-flex is-justify-content-center\">\n                <Annotation placement=\"bottom\" isActive={isAnnotationsToggled}>\n                  <strong>\n                    About Us description is generated by Deep AI based on the above title prompt.\n                  </strong>\n                </Annotation>\n              </div>\n              {otherParagraphs.map((paragraph) => (\n                <p className=\"block\">\n                  {paragraph}\n                </p>\n              ))}\n            </div>\n          </div>\n        </>\n      )}\n    />\n  );\n}\n\nAboutUsTemplate.propTypes = {\n  data: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nexport const pageQuery = graphql`\n  query($parentPath: String!) {\n    parentPage: sitePage(context: {pagePath: {eq: $parentPath}}) {\n      context {\n        imageAlt\n      }\n      image {\n        childImageSharp {\n          fixed(width: 250) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}