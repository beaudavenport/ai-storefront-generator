{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/templates/aboutUs.js","webpack:///./src/components/annotation.js"],"names":["Layout","title","navHomePath","render","useState","isMenuOpen","setIsMenuOpen","isAnnotationsToggled","setIsAnnotationsToggled","className","role","aria-label","to","ari-label","aria-expanded","onClick","aria-hidden","id","type","AboutUsTemplate","pageContext","parentPage","data","text","split","firstParagraph","otherParagraphs","name","parentPath","description","placement","isActive","fixed","image","childImageSharp","alt","context","imageAlt","map","paragraph","Annotation","children","defaultProps"],"mappings":"2FAAA,iDA+EeA,IAvEA,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,OAAa,EACbC,oBAAS,GAAtCC,EAD0C,KAC9BC,EAD8B,OAEOF,oBAAS,GAA1DG,EAF0C,KAEpBC,EAFoB,KAGjD,OACE,6BACE,yBAAKC,UAAU,+BAA+BC,KAAK,aAAaC,aAAW,mBACzE,yBAAKF,UAAU,aACb,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAMG,GAAIV,EAAaO,UAAU,eAC/B,gCAASR,IAEX,uBACES,KAAK,SACLD,UAAU,gBACVI,YAAU,OACVC,gBAAc,QACdC,QAAS,kBAAMT,GAAeD,KAE9B,0BAAMW,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAGtB,yBAAKC,GAAG,qBAAqBR,UAAS,eAAgBJ,EAAa,aAAe,KAChF,yBAAKI,UAAU,gBACb,kBAAC,IAAD,CAAMG,GAAIV,EAAaO,UAAU,eAAjC,YAGA,kBAAC,IAAD,CAAMG,GAAOV,EAAL,WAA4BO,UAAU,eAA9C,aAIF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,WACXF,EAKA,4BAAQW,KAAK,SAAST,UAAU,gCAAgCM,QAAS,kBAAMP,GAAwB,KAAvG,oBAJA,4BAAQU,KAAK,SAAST,UAAU,oBAAoBM,QAAS,kBAAMP,GAAwB,KAA3F,sBAUN,yBAAKC,UAAU,eACb,yBAAKA,UAAU,WACb,kBAAC,IAAD,CAAMG,GAAG,IAAIH,UAAU,kBAAvB,yBASZ,yBAAKA,UAAU,kBACZN,EAAO,CAAEI,0BAEZ,kBAAC,IAAD,S,kCClEN,iIAMe,SAASY,EAAT,GAAiD,IAAtBC,EAAqB,EAArBA,YAChCC,EADqD,EAARC,KAC7CD,WADqD,GAEnCD,EAAYG,MAAQ,IACiBC,MAAM,MAA9DC,EAHsD,KAGnCC,EAHmC,WAI7D,OACE,kBAAC,IAAD,CACEzB,MAAOmB,EAAYO,KACnBzB,YAAakB,EAAYQ,WACzBzB,OAAQ,gBAAGI,EAAH,EAAGA,qBAAH,OACN,oCACE,kBAAC,IAAD,CAAKN,MAAOmB,EAAYO,KAAME,YAAaT,EAAYnB,QACvD,yBAAKQ,UAAU,WACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,WACb,wBAAIA,UAAU,SAASW,EAAYnB,OACnC,yBAAKQ,UAAU,qCACb,kBAAC,IAAD,CAAYqB,UAAU,SAASC,SAAUxB,GACvC,oJAQR,yBAAKE,UAAU,+EACb,yBAAKA,UAAU,SACb,kBAAC,IAAD,CACEuB,MAAOX,EAAWY,MAAMC,gBAAgBF,MACxCG,IAAKd,EAAWe,QAAQC,WAE1B,yBAAK5B,UAAU,qCACb,kBAAC,IAAD,CAAYqB,UAAU,SAASC,SAAUxB,GACvC,gHAQV,yBAAKE,UAAU,WACb,uBAAGA,UAAU,SAASgB,GACtB,yBAAKhB,UAAU,qCACb,kBAAC,IAAD,CAAYqB,UAAU,SAASC,SAAUxB,GACvC,mHAKHmB,EAAgBY,KAAI,SAACC,GAAD,OACnB,uBAAG9B,UAAU,SACV8B,c,kCC7DnB,yBAGMC,EAAa,SAAC,GAAD,IACjBV,EADiB,EACjBA,UAAWW,EADM,EACNA,SADM,IACIV,gBADJ,gBAGjB,yBAAKtB,UAAS,sBAAwBqB,EAAxB,KAAqCC,EAAW,oBAAsB,KAClF,yBAAKtB,UAAU,mBACZgC,KAWPD,EAAWE,aAAe,CACxBZ,UAAW,MACXC,UAAU,GAGGS","file":"component---src-templates-about-us-js-86d9e28e31bcccc4cf7b.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/interactive-supports-focus */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport Footer from './footer';\n\nconst Layout = ({ title, navHomePath, render }) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [isAnnotationsToggled, setIsAnnotationsToggled] = useState(false);\n  return (\n    <div>\n      <nav className=\"navbar is-light is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <Link to={navHomePath} className=\"navbar-item\">\n              <strong>{title}</strong>\n            </Link>\n            <a\n              role=\"button\"\n              className=\"navbar-burger\"\n              ari-label=\"menu\"\n              aria-expanded=\"false\"\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\n            >\n              <span aria-hidden=\"true\" />\n              <span aria-hidden=\"true\" />\n              <span aria-hidden=\"true\" />\n            </a>\n          </div>\n          <div id=\"navbarBasicExample\" className={`navbar-menu${isMenuOpen ? ' is-active' : ''}`}>\n            <div className=\"navbar-start\">\n              <Link to={navHomePath} className=\"navbar-item\">\n                Products\n              </Link>\n              <Link to={`${navHomePath}about-us`} className=\"navbar-item\">\n                About Us\n              </Link>\n            </div>\n            <div className=\"navbar-end\">\n              <div className=\"navbar-item\">\n                <div className=\"buttons\">\n                  {!isAnnotationsToggled ? (\n                    <button type=\"button\" className=\"button is-warning\" onClick={() => setIsAnnotationsToggled(true)}>\n                      Show Annotations\n                    </button>\n                  ) : (\n                    <button type=\"button\" className=\"button is-warning is-inverted\" onClick={() => setIsAnnotationsToggled(false)}>\n                      Hide Annotations\n                    </button>\n                  )}\n                </div>\n              </div>\n              <div className=\"navbar-item\">\n                <div className=\"buttons\">\n                  <Link to=\"/\" className=\"button is-link\">\n                    Back to Entries\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n      <div className=\"container pt-6\">\n        {render({ isAnnotationsToggled })}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  title: PropTypes.string.isRequired,\n  navHomePath: PropTypes.string.isRequired,\n  render: PropTypes.func.isRequired,\n};\n\nexport default Layout;\n","import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Img from 'gatsby-image';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Annotation from '../components/annotation';\n\nexport default function AboutUsTemplate({ pageContext, data }) {\n  const { parentPage } = data;\n  const aboutUsParagraphs = pageContext.text || '';\n  const [firstParagraph, ...otherParagraphs] = aboutUsParagraphs.split('\\n');\n  return (\n    <Layout\n      title={pageContext.name}\n      navHomePath={pageContext.parentPath}\n      render={({ isAnnotationsToggled }) => (\n        <>\n          <SEO title={pageContext.name} description={pageContext.title} />\n          <div className=\"section\">\n            <div className=\"columns\">\n              <div className=\"column\">\n                <div className=\"section\">\n                  <h1 className=\"title\">{pageContext.title}</h1>\n                  <div className=\"is-flex is-justify-content-center\">\n                    <Annotation placement=\"bottom\" isActive={isAnnotationsToggled}>\n                      <strong>\n                        About Us title indicates the origins of the storefront in the first\n                        &quot;LOCATION &quot; entity from Google Analysis.\n                      </strong>\n                    </Annotation>\n                  </div>\n                </div>\n              </div>\n              <div className=\"column is-5-desktop is-flex is-align-items-center is-justify-content-center\">\n                <div className=\"image\">\n                  <Img\n                    fixed={parentPage.image.childImageSharp.fixed}\n                    alt={parentPage.context.imageAlt}\n                  />\n                  <div className=\"is-flex is-justify-content-center\">\n                    <Annotation placement=\"bottom\" isActive={isAnnotationsToggled}>\n                      <strong>\n                        About Us image is generated by Deep AI based on the above title prompt.\n                      </strong>\n                    </Annotation>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"section\">\n              <p className=\"block\">{firstParagraph}</p>\n              <div className=\"is-flex is-justify-content-center\">\n                <Annotation placement=\"bottom\" isActive={isAnnotationsToggled}>\n                  <strong>\n                    About Us description is generated by Deep AI based on the above title prompt.\n                  </strong>\n                </Annotation>\n              </div>\n              {otherParagraphs.map((paragraph) => (\n                <p className=\"block\">\n                  {paragraph}\n                </p>\n              ))}\n            </div>\n          </div>\n        </>\n      )}\n    />\n  );\n}\n\nAboutUsTemplate.propTypes = {\n  data: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  pageContext: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    parentPath: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query($parentPath: String!) {\n    parentPage: sitePage(context: {pagePath: {eq: $parentPath}}) {\n      context {\n        imageAlt\n      }\n      image {\n        childImageSharp {\n          fixed(width: 250) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst Annotation = ({\r\n  placement, children, isActive = false,\r\n}) => (\r\n  <div className={`popover is-popover-${placement} ${isActive ? 'is-popover-active' : ''}`}>\r\n    <div className=\"popover-content\">\r\n      {children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nAnnotation.propTypes = {\r\n  placement: PropTypes.oneOf(['top', 'bottom', 'left', 'right']),\r\n  children: PropTypes.node.isRequired,\r\n  isActive: PropTypes.bool,\r\n};\r\n\r\nAnnotation.defaultProps = {\r\n  placement: 'top',\r\n  isActive: false,\r\n};\r\n\r\nexport default Annotation;\r\n"],"sourceRoot":""}