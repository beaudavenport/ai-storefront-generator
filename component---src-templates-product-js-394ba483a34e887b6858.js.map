{"version":3,"sources":["webpack:///./src/templates/product.js"],"names":["ProductTemplate","data","pageContext","parentPage","sitePage","title","context","name","navHomePath","pagePath","render","isAnnotationsToggled","className","placement","isActive","fluid","image","childImageSharp","alt","imageAlt","productName","reviews","map","review","paragraphs","split","aria-hidden","reviewer","Array","stars","fill"],"mappings":"2FACA,qHAQe,SAASA,EAAT,GAAiD,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YACtCC,EAAyBF,EAAzBE,WAAYC,EAAaH,EAAbG,SACpB,OACE,kBAAC,IAAD,CACEC,MAAOF,EAAWG,QAAQC,KAC1BC,YAAaL,EAAWG,QAAQG,SAChCC,OAAQ,gBAAGC,EAAH,EAAGA,qBAAH,OACN,oCACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,+BACb,4BAAQA,UAAU,SAChB,yBAAKA,UAAU,qCACb,kBAAC,IAAD,CAAYC,UAAU,MAAMC,SAAUH,GACpC,6JAMJ,kBAAC,IAAD,CACEI,MAAOX,EAASY,MAAMC,gBAAgBF,MACtCG,IAAKd,EAASE,QAAQa,aAI5B,yBAAKP,UAAU,kEACb,6BACE,uBAAGA,UAAU,SAASV,EAAYkB,aAClC,uBAAGR,UAAU,YAAb,UACA,yFACA,yBAAKA,UAAU,qCACb,kBAAC,IAAD,CAAYC,UAAU,SAASC,SAAUH,GACvC,kHACqFT,EAAYkB,YADjG,WASZ,6BACA,yBAAKR,UAAU,WACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,iBAAd,cAEG,IACD,gCACGV,EAAYkB,cAIhBlB,EAAYmB,QAAQC,KAAI,SAACC,GACxB,IAAMC,EAAaD,EAAOA,OAAOE,MAAM,wBAAwB,GAAGA,MAAM,MACxE,OACE,yBAAKb,UAAU,WACb,yBAAKA,UAAU,uBACb,2BACE,yBAAKA,UAAU,qCACb,kBAAC,IAAD,CAAYC,UAAU,MAAMC,SAAUH,GACpC,mDAKJ,uBAAGC,UAAU,aAAac,cAAY,SACtC,+BACG,IACAH,EAAOI,YAId,yBAAKf,UAAU,UACb,yBAAKA,UAAU,IACZ,IAAIgB,MAAML,EAAOM,OAAOC,OAAOR,KAAI,kBAClC,0BAAMV,UAAU,iBACd,uBAAGA,UAAU,oBAGjB,yBAAKA,UAAU,yDACb,kBAAC,IAAD,CAAYC,UAAU,SAASC,SAAUH,GACvC,2KAKJ,2BACE,gCAASa,EAAW,KAEtB,2BAAIA,EAAW,IACf,yBAAKZ,UAAU,qCACb,kBAAC,IAAD,CAAYC,UAAU,SAASC,SAAUH,GACvC,wKAC2IT,EAAYkB,YADvJ,OAKJ,2BAAII,EAAW,IACf,2BAAIA,EAAW","file":"component---src-templates-product-js-394ba483a34e887b6858.js","sourcesContent":["import { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Annotation from '../components/annotation';\n// import Img from 'gatsby-image';\nimport Layout from '../components/layout';\n// import SEO from '../components/seo';\n\nexport default function ProductTemplate({ data, pageContext }) {\n  const { parentPage, sitePage } = data;\n  return (\n    <Layout\n      title={parentPage.context.name}\n      navHomePath={parentPage.context.pagePath}\n      render={({ isAnnotationsToggled }) => (\n        <>\n          <div className=\"section\">\n            <div className=\"columns\">\n              <div className=\"column is-one-third-desktop\">\n                <figure className=\"image\">\n                  <div className=\"is-flex is-justify-content-center\">\n                    <Annotation placement=\"top\" isActive={isAnnotationsToggled}>\n                      <strong>\n                        Product images are provided through the Unsplash API,\n                        the first result for the given \"search term\" of the product name.\n                      </strong>\n                    </Annotation>\n                  </div>\n                  <Img\n                    fluid={sitePage.image.childImageSharp.fluid}\n                    alt={sitePage.context.imageAlt}\n                  />\n                </figure>\n              </div>\n              <div className=\"column is-flex is-align-items-center is-justify-content-center\">\n                <div>\n                  <p className=\"title\">{pageContext.productName}</p>\n                  <p className=\"subtitle\">$99.99</p>\n                  <p>Nothing better than a great description of a good product.</p>\n                  <div className=\"is-flex is-justify-content-center\">\n                    <Annotation placement=\"bottom\" isActive={isAnnotationsToggled}>\n                      <strong>\n                        {`Descriptions are generated with Deep AI, with given prompt: \"A description for ${pageContext.productName}\"`}\n                      </strong>\n                    </Annotation>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <hr />\n          <div className=\"section\">\n            <div className=\"container\">\n              <h4 className=\"subtitle is-4\">\n                Reviews for\n                {' '}\n                <strong>\n                  {pageContext.productName}\n                </strong>\n              </h4>\n\n              {pageContext.reviews.map((review) => {\n                const paragraphs = review.review.split('A positive review of')[1].split('\\n');\n                return (\n                  <div className=\"columns\">\n                    <div className=\"column is-2-desktop\">\n                      <p>\n                        <div className=\"is-flex is-justify-content-center\">\n                          <Annotation placement=\"top\" isActive={isAnnotationsToggled}>\n                            <strong>\n                              A random name\n                            </strong>\n                          </Annotation>\n                        </div>\n                        <i className=\"fa fa-user\" aria-hidden=\"true\" />\n                        <small>\n                          {' '}\n                          {review.reviewer}\n                        </small>\n                      </p>\n                    </div>\n                    <div className=\"column\">\n                      <div className=\"\">\n                        {new Array(review.stars).fill().map(() => (\n                          <span className=\"icon is-small\">\n                            <i className=\"fas fa-star\" />\n                          </span>\n                        ))}\n                        <div className=\"column is-1-desktop is-flex is-justify-content-center\">\n                          <Annotation placement=\"bottom\" isActive={isAnnotationsToggled}>\n                            <strong>\n                              Rating based on Google&apos;s Sentiment Analysis score within text prompt (1 star for negative, 3 stars for neutral, 5 stars for positive)\n                            </strong>\n                          </Annotation>\n                        </div>\n                        <p>\n                          <strong>{paragraphs[0]}</strong>\n                        </p>\n                        <p>{paragraphs[2]}</p>\n                        <div className=\"is-flex is-justify-content-center\">\n                          <Annotation placement=\"bottom\" isActive={isAnnotationsToggled}>\n                            <strong>\n                              {`Review title and content are generated with Deep AI, with given prompt (using \"sentiment\"): \"A (positive/negative/neutral review for ${pageContext.productName}\"`}\n                            </strong>\n                          </Annotation>\n                        </div>\n                        <p>{paragraphs[4]}</p>\n                        <p>{paragraphs[6]}</p>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </>\n      )}\n    />\n  );\n}\nProductTemplate.propTypes = {\n  data: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nexport const pageQuery = graphql`\n  query($parentPath: String!, $path: String!) {\n    parentPage: sitePage(context: {pagePath: {eq: $parentPath}}) {\n      id\n      context {\n        name\n        pagePath\n      }\n    }\n    sitePage(context: {pagePath: {eq: $path}, type: {eq: \"Product\"}}) {\n      id\n      context {\n        imageAlt\n      }\n      image {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}