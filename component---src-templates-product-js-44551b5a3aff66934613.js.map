{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/templates/product.js","webpack:///./src/components/annotation.js"],"names":["Layout","title","navHomePath","render","useState","isMenuOpen","setIsMenuOpen","isAnnotationsToggled","setIsAnnotationsToggled","className","role","aria-label","to","ari-label","aria-expanded","onClick","aria-hidden","id","type","ProductTemplate","data","pageContext","parentPage","sitePage","context","name","pagePath","productName","description","fluid","image","childImageSharp","alt","imageAlt","placement","isActive","productPrice","productDescription","split","slice","map","paragraph","key","reviews","review","paragraphs","Array","stars","fill","_","i","reviewer","Annotation","children","defaultProps"],"mappings":"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","file":"component---src-templates-product-js-44551b5a3aff66934613.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/interactive-supports-focus */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport Footer from './footer';\n\nconst Layout = ({ title, navHomePath, render }) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [isAnnotationsToggled, setIsAnnotationsToggled] = useState(false);\n  return (\n    <div>\n      <nav className=\"navbar is-light is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <Link to={navHomePath} className=\"navbar-item\">\n              <strong>{title}</strong>\n            </Link>\n            <a\n              role=\"button\"\n              className=\"navbar-burger\"\n              ari-label=\"menu\"\n              aria-expanded=\"false\"\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\n            >\n              <span aria-hidden=\"true\" />\n              <span aria-hidden=\"true\" />\n              <span aria-hidden=\"true\" />\n            </a>\n          </div>\n          <div id=\"navbarBasicExample\" className={`navbar-menu${isMenuOpen ? ' is-active' : ''}`}>\n            <div className=\"navbar-start\">\n              <Link to={navHomePath} className=\"navbar-item\">\n                Products\n              </Link>\n              <Link to={`${navHomePath}about-us`} className=\"navbar-item\">\n                About Us\n              </Link>\n            </div>\n            <div className=\"navbar-end\">\n              <div className=\"navbar-item\">\n                <div className=\"buttons\">\n                  {!isAnnotationsToggled ? (\n                    <button type=\"button\" className=\"button is-warning\" onClick={() => setIsAnnotationsToggled(true)}>\n                      Show Annotations\n                    </button>\n                  ) : (\n                    <button type=\"button\" className=\"button is-warning is-inverted\" onClick={() => setIsAnnotationsToggled(false)}>\n                      Hide Annotations\n                    </button>\n                  )}\n                </div>\n              </div>\n              <div className=\"navbar-item\">\n                <div className=\"buttons\">\n                  <Link to=\"/\" className=\"button is-link\">\n                    Back to Entries\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n      <div className=\"container pt-6\">\n        {render({ isAnnotationsToggled })}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  title: PropTypes.string.isRequired,\n  navHomePath: PropTypes.string.isRequired,\n  render: PropTypes.func.isRequired,\n};\n\nexport default Layout;\n","import { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Annotation from '../components/annotation';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nexport default function ProductTemplate({ data, pageContext }) {\n  const { parentPage, sitePage } = data;\n  return (\n    <Layout\n      title={parentPage.context.name}\n      navHomePath={parentPage.context.pagePath}\n      render={({ isAnnotationsToggled }) => (\n        <>\n          <SEO title={pageContext.productName} description=\"Unique products, made-to-order\" />\n          <div className=\"section\">\n            <div className=\"columns\">\n              <div className=\"column is-one-third-desktop\">\n                <figure className=\"image\">\n                  <Img\n                    fluid={sitePage.image.childImageSharp.fluid}\n                    alt={sitePage.context.imageAlt}\n                  />\n                  <div className=\"is-flex is-justify-content-center\">\n                    <Annotation placement=\"bottom\" isActive={isAnnotationsToggled}>\n                      <strong>\n                        Product images are generated with Deep AI, providing the product name.\n                      </strong>\n                    </Annotation>\n                  </div>\n                </figure>\n              </div>\n              <div className=\"column is-flex is-align-items-center is-justify-content-center\">\n                <div>\n                  <p className=\"title\">{pageContext.productName}</p>\n                  <p className=\"subtitle\">{pageContext.productPrice}</p>\n                  {sitePage.context.productDescription.split('\\n').slice(0, 4).map((paragraph) => (\n                    <p className=\"block\" key={paragraph}>{paragraph}</p>\n                  ))}\n                  <div className=\"is-flex is-justify-content-center\">\n                    <Annotation placement=\"bottom\" isActive={isAnnotationsToggled}>\n                      <strong>\n                        {`Descriptions are generated with Deep AI, with given prompt: \"${pageContext.productName} is\"`}\n                      </strong>\n                    </Annotation>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <hr />\n          <div className=\"section\">\n            <div className=\"container\">\n              <h4 className=\"subtitle is-4\">\n                Reviews for\n                {' '}\n                <strong>\n                  {pageContext.productName}\n                </strong>\n              </h4>\n\n              {pageContext.reviews.map((review) => {\n                const paragraphs = review.review.split('\\n');\n                return (\n                  <div className=\"section\" key={paragraphs[0]}>\n                    <div className=\"is-flex is-justify-content-center\">\n                      <Annotation placement=\"top\" isActive={isAnnotationsToggled}>\n                        <strong>\n                          Rating based on Google&apos;s Sentiment Analysis score within text prompt\n                          (1 star for negative, 3 stars for neutral, 5 stars for positive)\n                        </strong>\n                      </Annotation>\n                    </div>\n                    <p>\n                      {new Array(pageContext.stars).fill().map((_, i) => (\n                        // eslint-disable-next-line react/no-array-index-key\n                        <span className=\"icon is-small\" key={`${i}`}>\n                          <i className=\"fas fa-star\" />\n                        </span>\n                      ))}\n                      <strong className=\"ml-3\">{paragraphs[0]}</strong>\n                    </p>\n                    <div className=\"block\">\n                      <div className=\"ml-6\">\n                        <Annotation placement=\"top\" isActive={isAnnotationsToggled}>\n                          <strong>\n                            A random name\n                          </strong>\n                        </Annotation>\n                      </div>\n                      <p>\n                        <i className=\"fa fa-user\" aria-hidden=\"true\" />\n                        <small>\n                          {' '}\n                          <strong>{review.reviewer}</strong>\n                        </small>\n                      </p>\n                    </div>\n                    <div className=\"block\">\n                      <p>{paragraphs[2]}</p>\n                      <div className=\"is-flex is-justify-content-center\">\n                        <Annotation placement=\"bottom\" isActive={isAnnotationsToggled}>\n                          <strong>\n                            {`Review title and content are generated with Deep AI, with given prompt (using \"sentiment\"): \"A (positive/negative/neutral) review for ${pageContext.productName}\"`}\n                          </strong>\n                        </Annotation>\n                      </div>\n                    </div>\n                    <p className=\"block\">{paragraphs[4]}</p>\n                    <p className=\"block\">{paragraphs[6]}</p>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </>\n      )}\n    />\n  );\n}\n\nProductTemplate.propTypes = {\n  data: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  pageContext: PropTypes.shape({\n    pagePath: PropTypes.string.isRequired,\n    productName: PropTypes.string.isRequired,\n    productPrice: PropTypes.string.isRequired,\n    reviews: PropTypes.arrayOf(PropTypes.shape),\n    stars: PropTypes.number,\n  }).isRequired,\n};\n\nexport const pageQuery = graphql`\n  query($parentPath: String!, $path: String!) {\n    parentPage: sitePage(context: {pagePath: {eq: $parentPath}}) {\n      id\n      context {\n        name\n        pagePath\n      }\n    }\n    sitePage(context: {pagePath: {eq: $path}, type: {eq: \"Product\"}}) {\n      id\n      context {\n        imageAlt\n        productDescription\n      }\n      image {\n        childImageSharp {\n          fluid {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nconst Annotation = ({\r\n  placement, children, isActive = false,\r\n}) => (\r\n  <div className={`popover is-popover-${placement} ${isActive ? 'is-popover-active' : ''}`}>\r\n    <div className=\"popover-content\">\r\n      {children}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nAnnotation.propTypes = {\r\n  placement: PropTypes.oneOf(['top', 'bottom', 'left', 'right']),\r\n  children: PropTypes.node.isRequired,\r\n  isActive: PropTypes.bool,\r\n};\r\n\r\nAnnotation.defaultProps = {\r\n  placement: 'top',\r\n  isActive: false,\r\n};\r\n\r\nexport default Annotation;\r\n"],"sourceRoot":""}