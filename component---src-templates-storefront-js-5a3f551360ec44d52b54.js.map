{"version":3,"sources":["webpack:///./src/templates/storefront.js"],"names":["StorefrontTemplate","data","pageContext","allSitePage","title","name","navHomePath","pagePath","render","isAnnotationsToggled","description","className","edges","map","edge","placement","isActive","fixed","node","image","childImageSharp","alt","context","imageAlt","productName","to"],"mappings":"4FAAA,6IAQe,SAASA,EAAT,GAAoD,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YACzCC,EAAgBF,EAAhBE,YACR,OACE,kBAAC,IAAD,CACEC,MAAOF,EAAYG,KACnBC,YAAaJ,EAAYK,SACzBC,OAAQ,gBAAGC,EAAH,EAAGA,qBAAH,OACN,oCACE,kBAAC,IAAD,CAAKL,MAAOF,EAAYG,KAAMK,YAAY,mCAC1C,yBAAKC,UAAU,WACb,uBAAGA,UAAU,SAAb,kCAGA,uBAAGA,UAAU,YAAb,6CAIF,yBAAKA,UAAU,WACb,yBAAKA,UAAU,WACZR,EAAYS,MAAMC,KAAI,SAACC,GAAD,OACrB,yBAAKH,UAAU,oCACb,yBAAKA,UAAU,mCACb,4BAAQA,UAAU,cAChB,yBAAKA,UAAU,qCACb,kBAAC,IAAD,CAAYI,UAAU,MAAMC,SAAUP,GACpC,6JAMJ,yBAAKE,UAAU,oBACb,kBAAC,IAAD,CACEM,MAAOH,EAAKI,KAAKC,MAAMC,gBAAgBH,MACvCI,IAAKP,EAAKI,KAAKI,QAAQC,aAI7B,6BACE,yBAAKZ,UAAU,iDACb,6BACE,uBAAGA,UAAU,aACX,gCAASG,EAAKI,KAAKI,QAAQE,aAC3B,6BACA,0CAEF,yBAAKb,UAAU,qCACb,kBAAC,IAAD,CAAYI,UAAU,SAASC,SAAUP,GACvC,6IAKJ,kBAAC,IAAD,CAAMgB,GAAIX,EAAKI,KAAKI,QAAQf,SAAUI,UAAU,qBAAhD","file":"component---src-templates-storefront-js-5a3f551360ec44d52b54.js","sourcesContent":["import { graphql, Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Img from 'gatsby-image';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Annotation from '../components/annotation';\n\nexport default function StorefrontTemplate({ data, pageContext }) {\n  const { allSitePage } = data;\n  return (\n    <Layout\n      title={pageContext.name}\n      navHomePath={pageContext.pagePath}\n      render={({ isAnnotationsToggled }) => (\n        <>\n          <SEO title={pageContext.name} description=\"Unique products, made-to-order\" />\n          <div className=\"section\">\n            <p className=\"title\">\n              Unique products, made-to-order\n            </p>\n            <p className=\"subtitle\">\n              Browse our selection of offerings below!\n            </p>\n          </div>\n          <div className=\"section\">\n            <div className=\"columns\">\n              {allSitePage.edges.map((edge) => (\n                <div className=\"column mb-4 is-one-third-desktop\">\n                  <div className=\"media is-justify-content-center\">\n                    <figure className=\"media-left\">\n                      <div className=\"is-flex is-justify-content-center\">\n                        <Annotation placement=\"top\" isActive={isAnnotationsToggled}>\n                          <strong>\n                            Product images are provided through the Unsplash API,\n                            the first result for the given \"search term\" of the product name.\n                          </strong>\n                        </Annotation>\n                      </div>\n                      <div className=\"image is-128X128\">\n                        <Img\n                          fixed={edge.node.image.childImageSharp.fixed}\n                          alt={edge.node.context.imageAlt}\n                        />\n                      </div>\n                    </figure>\n                    <div>\n                      <div className=\"content is-flex is-justify-content-flex-start\">\n                        <div>\n                          <p className=\"is-size-5\">\n                            <strong>{edge.node.context.productName}</strong>\n                            <br />\n                            <small>$99.99</small>\n                          </p>\n                          <div className=\"is-flex is-justify-content-center\">\n                            <Annotation placement=\"bottom\" isActive={isAnnotationsToggled}>\n                              <strong>\n                                Product names are extracted from the text prompt by Google analysis on terms considered \"CONSUMER_GOOD\"\n                              </strong>\n                            </Annotation>\n                          </div>\n                          <Link to={edge.node.context.pagePath} className=\"button is-primary\">View</Link>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </>\n      )}\n    />\n  );\n}\nStorefrontTemplate.propTypes = {\n  data: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    \n    allSitePage(filter: {path: {}, context: {parentPath: {eq: $path}, type: {eq: \"Product\"}}}) {\n      edges {\n        node {\n          id\n          path\n          context {\n            name\n            pagePath\n            productName\n            imageAlt\n          }\n          image {\n            childImageSharp {\n              fixed(width: 100) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}