{"version":3,"sources":["webpack:///./src/templates/storefront.js"],"names":["StorefrontTemplate","data","pageContext","allSitePage","title","name","navHomePath","pagePath","render","isAnnotationsToggled","className","fakeDescription","edges","map","edge","fixed","node","productImage","childImageSharp","alt","context","productImageAlt","productName","to"],"mappings":"2FAAA,qHAOe,SAASA,EAAT,GAAoD,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,YACzCC,EAAgBF,EAAhBE,YACR,OACE,kBAAC,IAAD,CACEC,MAAOF,EAAYG,KACnBC,YAAaJ,EAAYK,SACzBC,OAAQ,cAAGC,qBAAH,OACN,oCAEE,yBAAKC,UAAU,WACb,6BACGR,EAAYS,kBAGjB,yBAAKD,UAAU,WACb,yBAAKA,UAAU,WACZP,EAAYS,MAAMC,KAAI,SAACC,GAAD,OACrB,yBAAKJ,UAAU,yBACb,yBAAKA,UAAU,WACb,4BAAQA,UAAU,SAChB,kBAAC,IAAD,CACEK,MAAOD,EAAKE,KAAKC,aAAaC,gBAAgBH,MAC9CI,IAAKL,EAAKE,KAAKI,QAAQC,oBAI7B,yBAAKX,UAAU,6CACb,6BACE,2BACE,gCAASI,EAAKE,KAAKI,QAAQE,aAC3B,6BACA,0CAEF,kBAAC,IAAD,CAAMC,GAAIT,EAAKE,KAAKI,QAAQb,SAAUG,UAAU,qBAAhD","file":"component---src-templates-storefront-js-bd0a4d274d1a19eb1914.js","sourcesContent":["import { graphql, Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Img from 'gatsby-image';\nimport Layout from '../components/layout';\n// import SEO from '../components/seo';\n\nexport default function StorefrontTemplate({ data, pageContext }) {\n  const { allSitePage } = data;\n  return (\n    <Layout\n      title={pageContext.name}\n      navHomePath={pageContext.pagePath}\n      render={({ isAnnotationsToggled }) => (\n        <>\n          {/* <SEO title={title} /> */}\n          <div className=\"section\">\n            <div>\n              {pageContext.fakeDescription}\n            </div>\n          </div>\n          <div className=\"section\">\n            <div className=\"columns\">\n              {allSitePage.edges.map((edge) => (\n                <div className=\"column is-one-quarter\">\n                  <div className=\"content\">\n                    <figure className=\"image\">\n                      <Img\n                        fixed={edge.node.productImage.childImageSharp.fixed}\n                        alt={edge.node.context.productImageAlt}\n                      />\n                    </figure>\n                  </div>\n                  <div className=\"content is-flex is-justify-content-center\">\n                    <div>\n                      <p>\n                        <strong>{edge.node.context.productName}</strong>\n                        <br />\n                        <small>$99.99</small>\n                      </p>\n                      <Link to={edge.node.context.pagePath} className=\"button is-primary\">View</Link>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </>\n      )}\n    />\n  );\n}\nStorefrontTemplate.propTypes = {\n  data: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n};\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    \n    allSitePage(filter: {path: {}, context: {parentPath: {eq: $path}, type: {eq: \"Product\"}}}) {\n      edges {\n        node {\n          id\n          path\n          context {\n            name\n            pagePath\n            productName\n            productImageAlt\n          }\n          productImage {\n            childImageSharp {\n              fixed(width: 100) {\n                ...GatsbyImageSharpFixed\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}